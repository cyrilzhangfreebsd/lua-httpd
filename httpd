#!/usr/libexec/flua
-- vim: set et:
-- Minimal web server written in Lua
--
-- Use with inetd, no other dependencies:
-- http    stream  tcp     nowait  www    /usr/local/sbin/httpd      httpd

--
-- Copyright (c) 2016 - 2020 Ryan Moeller <ryan@freqlabs.com>
--
-- Permission to use, copy, modify, and distribute this software for any
-- purpose with or without fee is hereby granted, provided that the above
-- copyright notice and this permission notice appear in all copies.
--
-- THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
-- WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
-- MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
-- ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
-- WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
-- ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
-- OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
--

package.path = "/usr/home/ryan/lua-httpd/?.lua;" .. package.path

local httpd = require("httpd")
local template = require("template")

local boot = require("boot")
local disk = require("disk")
local distset = require("distset")
local keymap = require("keymap")
local partition = require("partition")

local manifest = "/usr/local/share/freebsd/MANIFESTS/amd64-amd64-12.1-RELEASE"

function pairsByKeys(t, f)
    local a = {}
    for n in pairs(t) do table.insert(a, n) end
    table.sort(a, f)
    local i = 0 -- iterator variable
    local iter = function() -- iterator function
        i = i + 1
        if a[i] == nil then return nil
        else return a[i], t[a[i]]
        end
    end
    return iter
end

function selected(cond)
    return cond and "selected" or ""
end

local server = httpd.create_server("/var/log/httpd.log")
server:add_route("GET", "^/(.*)$", function(request)
    local lang = request.matches[1]
    if lang == "" then
	lang = "en"
    end
    local keymap_index, keymap_menu = keymap.index(keymap.VT)
    local body = template.process([[
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Install FreeBSD</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.8.2/css/bulma.min.css">
    <link rel="stylesheet" href="https://unpkg.com/bulmaswatch/{{theme}}/bulmaswatch.min.css">
  </head>
  <body>
    <section class="section">
      <div class="container">

        <h1 class="title">Install FreeBSD</h1>

        <form action="/install" method="POST">

          <div class="field">
            <label class="label">{{keymap_menu[lang]}}:</label>
            <div class="control">
              <div class="select">
                <select name="keymap">
                  {% for _, map in ipairs(keymap_index[lang]) do %}
                    <option {{selected(map.file:find("/us.kbd$"))}}
                      value="{{map.file}}">{{map.desc}}</option>
                  {% end %}
                </select>
              </div>
            </div>
          </div>

          <div class="field">
            <label class="label">Hostname:</label>
            <div class="control">
              <input class="input" type="text" name="hostname" value="freebsd">
            </div>
          </div>

          <div class="field">
            <label class="label">Extra distsets:</label>
            <div class="control">
              <div class="select is-multiple">
                <select multiple size="8" name="distsets">
                  {% for _, dist in ipairs(distsets) do
                    if dist.name ~= "base" and dist.name ~= "kernel" then %}
                      <option {{selected(dist.sele)}} value="{{dist.file}}">
                        {{dist.desc}} {{dist.sele and "*" or ""}}
                      </option>
                    {% end
                  end %}
                </select>
              </div>
            </div>
          </div>

          <div class="field">
            <label class="label">Disk selection:</label>
            <div class="control">
              <div class="select is-multiple">
                <select multiple size="8" name="disks">
                  {% for dev, info in pairsByKeys(disks) do %}
                    <option value="{{dev}}">
                        {{dev}}:
                        {{info["Disk descr."]}}
                        ({{info["mediasize in bytes human"]}})
                    </option>
                  {% end %}
                </select>
              </div>
            </div>
          </div>

          <div class="field">
            <label class="label">Partitioning:</label>
            <div class="control">
              <div class="select">
                <select name="partitioning">
                  {% for _, style in ipairs(partition_styles) do %}
                    <option value="{{style.value}}"
                      {{selected(style.prefer(bootmethod))}}>
                      {{style.title}}
                      {{style.prefer(bootmethod) and "*" or ""}}
                    </option>
                  {% end %}
                </select>
              </div>
            </div>
          </div>

          <div class="field">
            <div class="control">
              <input class="button is-primary" type="submit" value="Apply">
            </div>
          </div>

        </form>

      </div>
    </section>
  </body>
</html>
]], { theme = "cerulean", -- "darkly", -- NB: the Bulmaswatch themes are broken atm
      lang = lang,
      boothowto = boot.howto(),
      bootmethod = boot.method(),
      disks = disk.info(),
      distsets = distset.list(manifest),
      keymap_menu = keymap_menu,
      keymap_index = keymap_index,
      partition_styles = partition.styles,
    })
    return { status=200, reason="ok", body=body }
end)
server:add_route("POST", "^/install$", function(request)
    return { status=501, reason="Not implemented", body="TODO" }
end)
server:run(true)
